;;; monkeytype-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from monkeytype.el

(autoload 'monkeytype-region "monkeytype" "\
Type marked region from START to END.

\\[monkeytype-region]

(fn START END)" t)
(autoload 'monkeytype-repeat "monkeytype" "\
Repeat run.

\\[monkeytype-repeat]" t)
(autoload 'monkeytype-fortune "monkeytype" "\
Type fortune.

\\[monkeytype-fortune]" t)
(autoload 'monkeytype-buffer "monkeytype" "\
Type entire current buffet.

\\[monkeytype-buffer]" t)
(autoload 'monkeytype-pause "monkeytype" "\
Pause run.

\\[monkeytype-pause]" t)
(autoload 'monkeytype-stop "monkeytype" "\
Finish run.

\\[monkeytype-stop]" t)
(autoload 'monkeytype-resume "monkeytype" "\
Resume run.

\\[monkeytype-resume]" t)
(autoload 'monkeytype-mistyped-words "monkeytype" "\
Practice mistyped words for current test.

\\[monkeytype-mistyped-words]" t)
(autoload 'monkeytype-hard-transitions "monkeytype" "\
Practice hard key combinations/transitions for current test.

\\[monkeytype-hard-transitions]" t)
(autoload 'monkeytype-save-mistyped-words "monkeytype" "\
Save mistyped words for current test.

See also: `monkeytype-load-words-from-file'
See also: `monkeytype-most-mistyped-words'

\\[monkeytype-save-mistyped-words]" t)
(autoload 'monkeytype-save-hard-transitions "monkeytype" "\
Save hard transitions for current test.

See also: `monkeytype-load-words-from-file'

\\[monkeytype-save-hard-transition]" t)
(autoload 'monkeytype-load-text-from-file "monkeytype" "\
Prompt user to enter text-file to use for typing.
Buffer will be filled with the vale of `fill-column' if
`monkeytype-auto-fill' is set to true.

\\[monkeytype-load-text-from-file]" t)
(autoload 'monkeytype-load-words-from-file "monkeytype" "\
Prompt user to enter words-file to use for typing.

Words will be randomized if `monkeytype-randomize' is set to true.
Words will be downcased if `monkeytype-downcase' is set to true.
Words special characters will get removed based on
`monkeytype-excluded-chars-regexp'.
Buffer will be filled with the vale of `fill-column' if
`monkeytype-words-auto-fill' is set to true.

\\[monkeytype-load-words-from-file]" t)
(autoload 'monkeytype-region-as-words "monkeytype" "\
Put the marked region from START to END in typing buffer.

Words will be randomized if `monkeytype-randomize' is set to true.
Words will be downcased if `monkeytype-downcase' is set to true.
Words special characters will get removed based on
`monkeytype-excluded-chars-regexp'.
Buffer will be filled with the vale of `fill-column' if
`monkeytype-auto-fill' is set to true.

\\[monkeytype-region-as-words]

(fn START END)" t)
(autoload 'monkeytype-most-mistyped-words "monkeytype" "\
Type most mistyped words from all word-files in `monkeytype-directory'.

See: `monkeytype-save-mistyped-words' for how word-files are saved.

\\[monkeytype-most-mistyped-words]" t)
(autoload 'monkeytype-save-text-from-url "monkeytype" "\
Download URL to `monketype-directory', naming it FILE-NAME.

This function shells out to pandoc(1) which character-encodes in UTF-8
so some characters might not be desirable for monkeytyping, so the custom
`monkeytype-asciify' option has be given to optionally allow for
further character encoding to ASCII (using iconv(1)).

(fn URL FILE-NAME)" t)
(autoload 'monkeytype-toggle-mode-line "monkeytype" "\
Hide or show WPM results in mode-line." t)
(autoload 'monkeytype-wpm-peek "monkeytype" "\
Hide/Show overlay with WPM info." t)
(autoload 'monkeytype-mode "monkeytype" "\
Monkeytype mode is a minor mode for speed/touch typing.

\\{monkeytype-mode-map}

This is a minor mode.  If called interactively, toggle the `Monkeytype
mode' mode.  If the prefix argument is positive, enable the mode, and if
it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable the
mode if ARG is nil, omitted, or is a positive number.  Disable the mode
if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate the variable `monkeytype-mode'.

The mode's hook is called both when the mode is enabled and when it is
disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "monkeytype" '("monke"))

;;; End of scraped data

(provide 'monkeytype-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; monkeytype-autoloads.el ends here
